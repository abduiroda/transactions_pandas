
import numpy as np

savings = np.array([
    [1000, 2000, 1500, 1200],  # Январь
    [1050, 1950, 1600, 1250],  # Февраль
    [1100, 1900, 1550, 1300],  # Март
    [1200, 2100, 1700, 1400],  # Апрель
    [1250, 2150, 1750, 1450],  # Май
    [1300, 2200, 1800, 1500],  # Июнь
    [1400, 2300, 1900, 1600],  # Июль
    [1500, 2400, 2000, 1700],  # Август
    [1600, 2500, 2100, 1800],  # Сентябрь
    [1650, 2600, 2200, 1900],  # Октябрь
    [1700, 2700, 2300, 2000],  # Ноябрь
    [1750, 2800, 2400, 2100]   # Декабрь
])
#1. Вычислите общую сумму сбережений всех клиентов на конец года (сумма по всем месяцам и всем клиентам).
total_savings=np.sum(savings)
print("Oбщая сумма сбережений всех клиентов на конец года:", total_savings)
#2.Найдите, в каком месяце все клиенты в сумме имели наибольшие сбережения.
total_savings_per_month=np.sum(savings, axis=1)
max_savings_month=np.argmax(total_savings_per_month)
print(f"все клиенты в сумме имели наибольшие сбережения в месяце: {max_savings_month + 1}")
#3.Для каждого клиента найдите средний размер сбережений за год.
average_savings_per_client=np.mean(savings, axis=0)
print("Для каждого клиента средний размер сбережений за год:", average_savings_per_client)
#4.Найдите клиента, который увеличил свои сбережения наибольшее количество за год. 
#То есть, вычислите разницу между сбережениями в декабре и январе для каждого клиента.
# Разница между сбережениями в декабре и январе для каждого клиента
december_savings = savings[11, :]  # Сбережения в декабре (последний месяц)
january_savings = savings[0, :]   # Сбережения в январе (первый месяц)
# Вычисляем разницу
savings_increase = december_savings - january_savings
# Находим клиента, который увеличил свои сбережения наибольшее количество
max_increase_client = np.argmax(savings_increase)
print(f"Клиент, который увеличил свои сбережения наибольшее количество: Клиент {max_increase_client + 1}")
#5.Проверьте, был ли месяц, когда сбережения всех клиентов были одинаковыми (сумма сбережений за месяц у всех клиентов равна).
# Проверяем, есть ли месяц, в котором все сбережения одинаковы
for month_index in range(savings.shape[0]):  # Пройдем по всем месяцам
    if np.all(savings[month_index, :] == savings[month_index, 0]):  # Проверяем, что все сбережения равны
        print(f"Месяц {month_index + 1} — все сбережения одинаковы.")
        break  # Если нашли, можно завершить цикл, так как достаточно одного месяца
else:
    print("Нет месяца, где все сбережения одинаковы.")
#6.Найдите, какой месяц был самым прибыльным для клиента с наименьшими сбережениями в начале года (в январе). Для этого используйте клиента с наименьшими сбережениями в январе и определите месяц, когда его сбережения увеличились больше всего.
# 1. Находим клиента с наименьшими сбережениями в январе
january_savings = savings[0, :]  # Сбережения всех клиентов в январе
min_savings_client = np.argmin(january_savings)  # Индекс клиента с наименьшими сбережениями в январе

# 2. Находим, в какой месяц этот клиент увеличил свои сбережения наибольшее количество
client_savings_increase = savings[:, min_savings_client] - savings[0, min_savings_client]  # Разница по месяцам

# 3. Находим месяц с максимальным увеличением сбережений
max_increase_month = np.argmax(client_savings_increase)  # Индекс месяца с максимальным увеличением
print(f"Клиент с наименьшими сбережениями в январе: Клиент {min_savings_client + 1}")
print(f"Самый прибыльный месяц для этого клиента: Месяц {max_increase_month + 1}")